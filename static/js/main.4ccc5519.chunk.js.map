{"version":3,"sources":["Components/ContatctForm/ContactForm.module.scss","Components/ContactList/ContactList.module.scss","Components/Filter/Filter.module.scss","Components/Section/Section.module.scss","Components/Container/Container.module.scss","Components/ContatctForm/ContactForm.js","Components/ContactList/ContactList.js","Components/Filter/Filter.js","Components/Container/Container.js","Components/Section/Section.js","App.js","index.js"],"names":["module","exports","ContactForm","state","name","number","onChange","evt","currentTarget","value","setState","onSubmit","preventDefault","props","onAddContact","className","styles","form","this","field","input","type","pattern","title","required","add","Component","ContactList","contacts","onDeleteContact","list","map","id","listItem","contact","button","onClick","Filter","filter","text","Container","children","container","Section","section","App","uuidv4","find","alert","onFilter","event","filteredContacts","normalizedFilter","toLowerCase","includes","contactId","prevState","localStorage","getItem","parsedContacts","JSON","parse","prevProps","setItem","stringify","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4ccc5519.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__1Cu8l\",\"field\":\"ContactForm_field__27BjF\",\"input\":\"ContactForm_input__1EHdH\",\"add\":\"ContactForm_add__4DbyD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ContactList_list__2kQfS\",\"listItem\":\"ContactList_listItem__1_Ns6\",\"number\":\"ContactList_number__3XVCn\",\"contact\":\"ContactList_contact__3ge_d\",\"button\":\"ContactList_button__2ruz7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"filter\":\"Filter_filter__LhmAz\",\"text\":\"Filter_text__3zjiI\",\"input\":\"Filter_input__1tmrJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"Section_section__39oey\",\"title\":\"Section_title__3BeRz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Container_container__3OLow\"};","import { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport styles from \"./ContactForm.module.scss\";\n\nclass ContactForm extends Component {\n  static propTypes = {\n    name: PropTypes.string,\n    number: PropTypes.number,\n  };\n\n  state = {\n    name: \"\",\n    number: \"\",\n  };\n\n  onChange = (evt) => {\n    const { name, value } = evt.currentTarget;\n    this.setState({ [name]: value });\n  };\n\n  onSubmit = (evt) => {\n    evt.preventDefault();\n    const { name, number } = this.state;\n    this.props.onAddContact(name, number);\n    this.setState({ name: \"\", number: \"\" });\n  };\n\n  render() {\n    return (\n      <form className={styles.form} onSubmit={this.onSubmit}>\n        <label className={styles.field}>\n          Name:\n          <input\n            className={styles.input}\n            type=\"text\"\n            name=\"name\"\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n            value={this.state.name}\n            onChange={this.onChange}\n            required\n          />\n        </label>\n\n        <label className={styles.field}>\n          Number:\n          <input\n            className={styles.input}\n            type=\"tel\"\n            name=\"number\"\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n            value={this.state.number}\n            onChange={this.onChange}\n            required\n          />\n        </label>\n\n        <button className={styles.add} type=\"submit\">\n          Add Contact\n        </button>\n      </form>\n    );\n  }\n}\n\nexport default ContactForm;\n","import PropTypes from \"prop-types\";\nimport styles from \"./ContactList.module.scss\";\n\nconst ContactList = ({ contacts, onDeleteContact }) => (\n  <ul className={styles.list}>\n    {contacts.map(({ id, name, number }) => (\n      <li key={id} className={styles.listItem}>\n        <p className={styles.contact}>\n          {name}: <span className={styles.number}>{number}</span>\n        </p>\n        <button\n          className={styles.button}\n          type=\"button\"\n          onClick={() => onDeleteContact(id)}\n        >\n          Delete\n        </button>\n      </li>\n    ))}\n  </ul>\n);\n\nContactList.propTypes = {\n  id: PropTypes.string,\n  name: PropTypes.string,\n  number: PropTypes.string,\n};\n\nexport default ContactList;\n","import PropTypes from \"prop-types\";\nimport styles from \"./Filter.module.scss\";\n\nconst Filter = ({ value, onChange }) => (\n  <label className={styles.filter}>\n    <p className={styles.text}>Search Contact</p>\n    <input\n      className={styles.input}\n      type=\"text\"\n      value={value}\n      onChange={onChange}\n    />\n  </label>\n);\n\nFilter.propTypes = {\n  value: PropTypes.string.isRequired,\n};\n\nexport default Filter;\n","import styles from \"./Container.module.scss\";\n\nconst Container = ({ children }) => (\n  <div className={styles.container}>{children}</div>\n);\n\nexport default Container;\n","import styles from \"./Section.module.scss\";\n\nconst Section = ({ title, children }) => (\n  <section className={styles.section}>\n    <h1 className={styles.title}>{title}</h1>\n    {children}\n  </section>\n);\n\nexport default Section;\n","import { Component } from \"react\";\nimport { v4 as uuidv4 } from \"uuid\";\n\nimport ContactForm from \"./Components/ContatctForm\";\nimport ContactList from \"./Components/ContactList\";\nimport Filter from \"./Components/Filter\";\nimport Container from \"./Components/Container\";\nimport Section from \"./Components/Section\";\n\nimport \"./styles.scss\";\n\nclass App extends Component {\n  state = {\n    contacts: [\n      { id: \"id-1\", name: \"Rosie Simpson\", number: \"459-12-56\" },\n      { id: \"id-2\", name: \"Hermione Kline\", number: \"443-89-12\" },\n      { id: \"id-3\", name: \"Eden Clements\", number: \"645-17-79\" },\n      { id: \"id-4\", name: \"Annie Copeland\", number: \"227-91-26\" },\n    ],\n    filter: \"\",\n  };\n\n  componentDidMount() {\n    const contacts = localStorage.getItem(\"contacts\");\n    const parsedContacts = JSON.parse(contacts);\n\n    if (parsedContacts) {\n      this.setState({ contacts: parsedContacts });\n    }\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (this.state.contacts !== prevState.contacts) {\n      localStorage.setItem(\"contacts\", JSON.stringify(this.state.contacts));\n    }\n  }\n\n  onAddContact = (name, number) => {\n    const contact = {\n      id: uuidv4(),\n      name,\n      number,\n    };\n\n    const contactExists = this.state.contacts.find(\n      (contact) => contact.name === name\n    );\n\n    if (contactExists) {\n      alert(`${name} is already in contacts`);\n      return;\n    }\n\n    this.setState(({ contacts }) => ({ contacts: [contact, ...contacts] }));\n  };\n\n  onFilter = (event) => {\n    this.setState({ filter: event.currentTarget.value });\n  };\n\n  filteredContacts = () => {\n    const { contacts, filter } = this.state;\n    const normalizedFilter = filter.toLowerCase();\n\n    return contacts.filter((contact) =>\n      contact.name.toLowerCase().includes(normalizedFilter)\n    );\n  };\n\n  onDeleteContact = (contactId) => {\n    this.setState((prevState) => ({\n      contacts: prevState.contacts.filter(\n        (contact) => contact.id !== contactId\n      ),\n    }));\n  };\n\n  render() {\n    return (\n      <Container>\n        <h1>Phonebook</h1>\n        <div className=\"wrapper\">\n          <Section title=\"Add contact\">\n            <ContactForm onAddContact={this.onAddContact} />\n          </Section>\n          <Section title=\"Contacts\">\n            <Filter value={this.state.filter} onChange={this.onFilter} />\n            <ContactList\n              contacts={this.filteredContacts()}\n              onDeleteContact={this.onDeleteContact}\n            />\n          </Section>\n        </div>\n      </Container>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"modern-normalize/modern-normalize.css\";\n\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}